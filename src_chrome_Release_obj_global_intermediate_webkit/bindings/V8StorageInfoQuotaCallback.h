/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
    Boston, MA 02111-1307, USA.
*/

#if ENABLE(QUOTA)

#ifndef V8StorageInfoQuotaCallback_h
#define V8StorageInfoQuotaCallback_h

#include "ActiveDOMCallback.h"
#include "StorageInfoQuotaCallback.h"
#include "WorldContextHandle.h"
#include <v8.h>
#include <wtf/Forward.h>

namespace WebCore {

class ScriptExecutionContext;

class V8StorageInfoQuotaCallback : public StorageInfoQuotaCallback, public ActiveDOMCallback {
public:
    static PassRefPtr<V8StorageInfoQuotaCallback> create(v8::Local<v8::Value> value, ScriptExecutionContext* context)
    {
        ASSERT(value->IsObject());
        ASSERT(context);
        return adoptRef(new V8StorageInfoQuotaCallback(value->ToObject(), context));
    }

    virtual ~V8StorageInfoQuotaCallback();

    // Functions
    virtual bool handleEvent(unsigned long long grantedQuotaInBytes);

private:
    V8StorageInfoQuotaCallback(v8::Local<v8::Object>, ScriptExecutionContext*);

    v8::Persistent<v8::Object> m_callback;
    WorldContextHandle m_worldContext;
};

}

#endif // V8StorageInfoQuotaCallback_h

#endif // ENABLE(QUOTA)
